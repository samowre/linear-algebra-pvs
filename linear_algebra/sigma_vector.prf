(|sigma_vector|
 (|connected_domain| 0
  (|connected_domain-1| NIL 3521046835
   ("" (SKOSIMP)
    (("" (GRIND) (("" (GRIND) (("" (POSTPONE) NIL NIL)) NIL)) NIL)) NIL)
   NIL SHOSTAK))
 (|low_TCC1| 0
  (|tcc| "tcc" 3489915882
   ("" (SKOSIMP)
    (("" (LEMMA "connected_domain")
      (("" (INST -1 "x!1" "y!1" "z!1") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|connected_domain| FORMULA-DECL NIL |sigma_vector| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK)
  (|low_TCC1-1| NIL 3489915779 ("" (ASSUMING-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL) NIL))
 (|oh_TCC1| 0
  (|oh_TCC1-1| NIL 3518275428 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |sigma_vector| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|oh_TCC2| 0
  (|oh_TCC2-1| NIL 3518275428 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |sigma_vector| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|SigmaV_last_TCC1| 0
  (|thm| "fin" 3546879131
   ("" (SKOSIMP)
    (("" (TYPEPRED "high!1")
      (("" (CASE " T_pred(high!1)")
        (("1" (INST 2 "high!1") (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (CASE "(EXISTS (j: T): high!1 <= j)")
          (("1" (SKOSIMP) (("1" (GRIND) NIL NIL)) NIL) ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|high!1| SKOLEM-CONST-DECL "T_high[T]" |sigma_vector| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK)
  (|SigmaV_last_TCC1-1| NIL 3546878969 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   NIL))
 (|SigmaV_last_TCC2| 0
  (|thm| "fin" 3546879358
   ("" (SKOSIMP)
    (("" (TYPEPRED "high!1")
      (("" (TYPEPRED "low!1")
        (("" (GRIND)
          (("1" (LEMMA "connected_domain")
            (("1" (INST -1 "low!1" "j!1" "high!1") (("1" (ASSERT) NIL NIL))
              NIL))
            NIL)
           ("2" (LEMMA "connected_domain")
            (("2" (TYPEPRED "low!1")
              (("2" (INST -2 "j!1" "j!2" "high!1") (("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|connected_domain| FORMULA-DECL NIL |sigma_vector| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/"))
   SHOSTAK)
  (|SigmaV_last_TCC2-1| NIL 3546878969 ("" (SUBTYPE-TCC) NIL NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   NIL))
 (|SigmaV_last| 0
  (|SigmaV_last-1| NIL 3546883946
   ("" (SKOSIMP)
    (("" (EXPAND "SigmaV")
      (("" (APPLY-EXTENSIONALITY)
        (("1" (HIDE 2)
          (("1" (EXPAND "+")
            (("1" (LEMMA "sigma_last[T]")
              (("1" (INST -1 "LAMBDA (j: T): F!1(j)(x!1)" "high!1" "low!1")
                (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP)
          (("2" (TYPEPRED "high!1")
            (("2" (CASE " T_pred(high!1)")
              (("1" (INST 2 "high!1") (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (CASE " (EXISTS (j: T): high!1 <= j)")
                (("1" (SKOSIMP)
                  (("1" (INST 3 "j!1") (("1" (ASSERT) NIL NIL)) NIL)) NIL)
                 ("2" (ASSERT) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|sigma_last| FORMULA-DECL NIL |sigma| "reals/")
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |sigma_vector| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|high!1| SKOLEM-CONST-DECL "T_high[T]" |sigma_vector| NIL)
    (+ CONST-DECL "real" |vectors| "vectors/")
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK))
 (|SigmaV_scal| 0
  (|thm| "finished" 3546764749
   ("" (SKOSIMP)
    (("" (CASE "p!1>m!1")
      (("1" (EXPAND "SigmaV")
        (("1" (EXPAND "sigma")
          (("1" (REPLACE -1) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "p!1=m!1")
        (("1" (HIDE 1)
          (("1" (REPLACE -1)
            (("1" (EXPAND "SigmaV")
              (("1" (EXPAND "sigma")
                (("1" (EXPAND "sigma")
                  (("1" (APPLY-EXTENSIONALITY)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "*")
                        (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (CASE "p!1<m!1")
          (("1" (HIDE 1 2)
            (("1" (EXPAND "SigmaV")
              (("1" (LEMMA "sigma_scal[T]")
                (("1" (APPLY-EXTENSIONALITY)
                  (("1" (HIDE 2)
                    (("1"
                      (INST -1 "LAMBDA (j: T): F!1(j)(x!1)" "a!1" "m!1" "p!1")
                      (("1"
                        (CASE
                            " sigma(p!1, m!1, LAMBDA (i: T): a!1 * F!1(i)(x!1))= sigma(p!1, m!1, LAMBDA (j: T): (a!1 * F!1)(j)(x!1))")
                        (("1" (REPLACE -1 -2)
                          (("1" (REPLACE -2 1)
                            (("1" (HIDE -1 -2)
                              (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 2)
                          (("2" (EXPAND "*")
                            (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|T_pred| CONST-DECL "[int -> boolean]" |sigma_vector| NIL)
    (T FORMAL-SUBTYPE-DECL NIL |sigma_vector| NIL)
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (* CONST-DECL "Vector" |vectors| "vectors/")
    (|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sigma_scal| FORMULA-DECL NIL |sigma| "reals/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|n| FORMAL-CONST-DECL "posnat" |sigma_vector| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (* CONST-DECL "[real, [T -> Vector[n]] -> [T -> Vector[n]]]" |sigma_vector|
       NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK)
  (|SigmaV_scal-1| NIL 3546675674
   ("" (SKOSIMP)
    (("" (CASE "p!1>m!1")
      (("1" (EXPAND "SigmaV")
        (("1" (EXPAND "sigma")
          (("1" (REPLACE -1) (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL)
       ("2" (CASE "p!1=m!1")
        (("1" (HIDE 1)
          (("1" (REPLACE -1)
            (("1" (EXPAND "SigmaV")
              (("1" (EXPAND "sigma")
                (("1" (EXPAND "sigma")
                  (("1" (APPLY-EXTENSIONALITY)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "*")
                        (("1" (EXPAND "*") (("1" (PROPAX) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (CASE "p!1<m!1")
          (("1" (HIDE 1 2)
            (("1" (EXPAND "SigmaV")
              (("1" (LEMMA "sigma_scal[T]")
                (("1" (APPLY-EXTENSIONALITY)
                  (("1" (HIDE 2)
                    (("1"
                      (INST -1 "LAMBDA (j: T): F!1(j)(x!1)" "a!1" "m!1" "p!1")
                      (("1"
                        (CASE
                            " sigma(p!1, m!1, LAMBDA (i: T): a!1 * F!1(i)(x!1))= sigma(p!1, m!1, LAMBDA (j: T): (a!1 * F!1)(j)(x!1))")
                        (("1" (REPLACE -1 -2)
                          (("1" (REPLACE -2 1)
                            (("1" (HIDE -1 -2) (("1" (POSTPONE) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -1 2)
                          (("2" (EXPAND "*")
                            (("2" (EXPAND "*") (("2" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL)
   SHOSTAK)))

