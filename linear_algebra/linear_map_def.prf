(|linear_map_def|
 (|vec_expan?_TCC1| 0
  (|vec_expan?_TCC1-1| NIL 3518951076 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|vec_expan?_TCC2| 0
  (|vec_expan?_TCC2-1| NIL 3518951076 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|vec_expan?_TCC3| 0
  (|vec_expan?_TCC3-1| NIL 3547179707 ("" (ASSUMING-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|vec_repre_bases| 0
  (|thm| "vec_bases" 3519556744
   ("" (SKOSIMP)
    (("" (EXPAND "SigmaV")
      (("" (APPLY-EXTENSIONALITY)
        (("1" (HIDE 2)
          (("1" (LEMMA "sigma_middle[Index[n!1]]")
            (("1"
              (INST -1 "LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)" "n!1-1"
               "x!2" "0")
              (("1" (ASSERT)
                (("1" (REPLACE -1)
                  (("1"
                    (CASE
                        " sigma(0, x!2 - 1, LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2))=0")
                    (("1" (REPLACE -1)
                      (("1"
                        (CASE " sigma(1 + x!2, n!1 - 1,
              LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2))=0")
                        (("1" (REPLACE -1)
                          (("1" (ASSERT)
                            (("1" (EXPAND "*" 1) (("1" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (LEMMA "sigma_zero[ Index[n!1]]")
                            (("2" (INST -1 "n!1-1" "1+x!2")
                              (("2" (LEMMA "sigma_eq[ Index[n!1]]")
                                (("2"
                                  (INST -1
                                   " LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)"
                                   "LAMBDA (i: Index[n!1]): 0" "n!1-1" "1+x!2")
                                  (("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (SKOSIMP) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE 2)
                      (("2" (LEMMA "sigma_zero[ Index[n!1]]")
                        (("2" (INST -1 "x!2-1" "0")
                          (("2" (ASSERT)
                            (("2" (LEMMA "sigma_eq[ Index[n!1]]")
                              (("2"
                                (INST -1
                                 " LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)"
                                 "(LAMBDA (i: Index[n!1]): 0)" "x!2-1" "0")
                                (("2" (ASSERT)
                                  (("2" (SKOSIMP) (("2" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP) (("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|sigma_nat| APPLICATION-JUDGEMENT "nat" |vectors| "vectors/")
    (|sigma_eq| FORMULA-DECL NIL |sigma| "reals/")
    (|sigma_zero| FORMULA-DECL NIL |sigma| "reals/")
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (* CONST-DECL "Vector" |vectors| "vectors/")
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|sigma_middle| FORMULA-DECL NIL |sigma| "reals/")
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|n!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|e| CONST-DECL "[below[n] -> Vector[n]]" |linear_map_def| NIL)
    (* CONST-DECL "[[T -> real], [T -> Vector[n]] -> [T -> Vector[n]]]"
       |sigma_vector| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   SHOSTAK)
  (|vec_repre_bases-1| NIL 3518951134
   ("" (SKOSIMP)
    (("" (APPLY-EXTENSIONALITY)
      (("" (EXPAND "SigmaV")
        (("" (ASSERT)
          (("" (LEMMA "sigma_middle[Index[n!1]]")
            (("1"
              (INST -1 "LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)" "n!1-1"
               "x!2" "0")
              (("1" (ASSERT)
                (("1" (REPLACE -1)
                  (("1" (HIDE -1)
                    (("1"
                      (CASE
                          "sigma(0, x!2 - 1, LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2))=0")
                      (("1" (REPLACE -1)
                        (("1" (ASSERT)
                          (("1"
                            (CASE " sigma(1 + x!2, n!1 - 1,
              LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2))=0")
                            (("1" (REPLACE -1)
                              (("1" (ASSERT)
                                (("1" (EXPAND "*" 1)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "e" 1)
                                      (("1" (ASSERT) (("1" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (HIDE 2 3)
                              (("2" (LEMMA "sigma_eq[Index[n!1]]")
                                (("2" (LEMMA "sigma_zero[Index[n!1]]")
                                  (("2" (INST -1 "n!1-1" "1+x!2")
                                    (("2"
                                      (INST -2
                                       "LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)"
                                       "(LAMBDA (i: Index[n!1]): 0)" "n!1-1"
                                       "1+x!2")
                                      (("2" (ASSERT)
                                        (("2" (SKOSIMP)
                                          (("2" (EXPAND "*" 1)
                                            (("2" (ASSERT)
                                              (("2" (GRIND) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE 2 3)
                        (("2" (LEMMA "sigma_zero[Index[n!1]]")
                          (("2" (INST -1 "x!2-1" "0")
                            (("2" (LEMMA "sigma_eq[Index[n!1]]")
                              (("2"
                                (INST -1
                                 "LAMBDA (j: Index[n!1]): (x!1 * e(n!1))(j)(x!2)"
                                 "(LAMBDA (i: Index[n!1]): 0)" "x!2-1" "0")
                                (("2" (ASSERT)
                                  (("2" (SKOSIMP)
                                    (("2" (EXPAND "*" 1)
                                      (("2" (ASSERT) (("2" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (ASSERT) (("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|cano_base| 0
  (|cano_base-1| NIL 3518781153
   ("" (SKOSIMP)
    (("" (EXPAND "base?")
      (("" (SPLIT)
        (("1" (EXPAND "unit?")
          (("1" (SKOSIMP)
            (("1" (EXPAND "*")
              (("1" (LEMMA "sigma_middle[ Index[n!1]]")
                (("1"
                  (INST -1
                   " LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(i!1)(i)"
                   "n!1-1" "i!1" "0")
                  (("1" (ASSERT)
                    (("1" (REPLACE -1)
                      (("1"
                        (CASE " sigma(0, i!1 - 1,
            LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(i!1)(i))=0")
                        (("1" (REPLACE -1)
                          (("1" (ASSERT)
                            (("1"
                              (CASE " sigma(1 + i!1, n!1 - 1,
            LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(i!1)(i))=0")
                              (("1" (REPLACE -1)
                                (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL))
                                NIL)
                               ("2" (HIDE 2)
                                (("2" (LEMMA "sigma_zero[ Index[n!1]]")
                                  (("2" (INST -1 "n!1-1" "1+i!1")
                                    (("2" (SWAP-REL -1)
                                      (("2" (REPLACE -1)
                                        (("2" (LEMMA "sigma_eq [Index[n!1]]")
                                          (("2"
                                            (INST -1
                                             " LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(i!1)(i)"
                                             "LAMBDA (i: Index[n!1]): 0"
                                             "n!1-1" "1+i!1")
                                            (("2" (ASSERT)
                                              (("2" (SKOSIMP)
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE 2)
                          (("2" (LEMMA "sigma_zero[ Index[n!1]]")
                            (("2" (INST -1 "i!1-1" "0")
                              (("2" (SWAP-REL -1)
                                (("2" (LEMMA "sigma_eq[Index[n!1]]")
                                  (("2"
                                    (INST -1 " (LAMBDA (i: Index[n!1]): 0)"
                                     " LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(i!1)(i)"
                                     "i!1-1" "0")
                                    (("2" (SWAP-REL -2)
                                      (("2" (ASSERT)
                                        (("2" (SKOSIMP)
                                          (("2" (HIDE 2)
                                            (("2" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (EXPAND "ortho?")
          (("2" (SKOSIMP)
            (("2" (EXPAND "*")
              (("2" (LEMMA "sigma_zero[ Index[n!1]]")
                (("1" (INST -1 "n!1-1" "0")
                  (("1" (LEMMA "sigma_eq  [Index[n!1]]")
                    (("1"
                      (INST -1
                       " LAMBDA (i: Index[n!1]): e(n!1)(i!1)(i) * e(n!1)(j!1)(i)"
                       " (LAMBDA (i: Index[n!1]): 0)" "n!1-1" "0")
                      (("1" (ASSERT)
                        (("1" (HIDE 2)
                          (("1" (SKOSIMP) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (SKOSIMP) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("3" (EXPAND "vec_expan?")
          (("3" (SKOSIMP)
            (("3" (LEMMA "vec_repre_bases") (("3" (INST?) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|base?| CONST-DECL "bool" |linear_map_def| NIL)
    (|vec_expan?| CONST-DECL "bool" |linear_map_def| NIL)
    (|vec_repre_bases| FORMULA-DECL NIL |linear_map_def| NIL)
    (|ortho?| CONST-DECL "bool" |linear_map_def| NIL)
    (|mult_divides2| APPLICATION-JUDGEMENT "(divides(m))" |divides| NIL)
    (|unit?| CONST-DECL "bool" |linear_map_def| NIL)
    (* CONST-DECL "real" |vectors| "vectors/")
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|e| CONST-DECL "[below[n] -> Vector[n]]" |linear_map_def| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|sigma_nat| APPLICATION-JUDGEMENT "nat" |vectors| "vectors/")
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|mult_divides1| APPLICATION-JUDGEMENT "(divides(n))" |divides| NIL)
    (|nnint_times_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|even_minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|sigma_zero| FORMULA-DECL NIL |sigma| "reals/")
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| "reals/")
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|sigma_middle| FORMULA-DECL NIL |sigma| "reals/"))
   SHOSTAK))
 (|linear_map_e?_TCC1| 0
  (|linear_map_e?_TCC1-1| NIL 3519034071 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|linear_map_e?_TCC2| 0
  (|linear_map_e?_TCC2-1| NIL 3519034071 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|linear_map_e?_TCC3| 0
  (|linear_map_e?_TCC3-1| NIL 3519034071 ("" (ASSUMING-TCC) NIL NIL)
   ((< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|linear_map_e?_TCC4| 0
  (|linear_map_e?_TCC4-1| NIL 3519034071 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|linear_map_e?_TCC5| 0
  (|linear_map_e?_TCC5-1| NIL 3519732414 ("" (SUBTYPE-TCC) NIL NIL)
   ((< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|linear_map_e?_TCC6| 0
  (|linear_map_e?_TCC6-1| NIL 3519732414 ("" (SUBTYPE-TCC) NIL NIL)
   ((|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|linear_map_e_comp_TCC1| 0
  (|linear_map_e_comp_TCC1-1| NIL 3519732414 ("" (SUBTYPE-TCC) NIL NIL)
   ((|same?| CONST-DECL "bool" |linear_map| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL))
   NIL))
 (|linear_map_e_comp| 0
  (|linear_map_e_comp-1| NIL 3519732440
   ("" (SKOSIMP)
    (("" (EXPAND "linear_map_e?")
      (("" (SKOSIMP)
        (("" (EXPAND "linear_map_e?")
          (("" (SPLIT)
            (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (EXPAND "o" 1)
                (("3" (EXPAND "o" 1)
                  (("3" (INST -2 "l!1")
                    (("3" (INST -1 "l!1")
                      (("3" (INST -2 "x!1" "F!1")
                        (("3" (REPLACE -2)
                          (("3" (HIDE -2)
                            (("3" (EXPAND "o")
                              (("3"
                                (INST -1 "x!1"
                                 "LAMBDA (x: below[l!1]): g!1`mp(F!1(x))")
                                (("1" (APPLY-EXTENSIONALITY 1)
                                  (("1" (HIDE 2)
                                    (("1" (EXPAND "*")
                                      (("1" (DECOMPOSE-EQUALITY -1)
                                        (("1" (INST -1 "x!2")
                                          (("1" (EXPAND "SigmaV")
                                            (("1" (EXPAND "*")
                                              (("1" (PROPAX) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (HIDE 2)
                                    (("2" (SKOSIMP) (("2" (GRIND) NIL NIL))
                                      NIL))
                                    NIL)
                                   ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)
                                   ("4" (HIDE 2)
                                    (("4" (SKOSIMP)
                                      (("4" (SKOSIMP) (("4" (GRIND) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("5" (HIDE 2) (("5" (GRIND) NIL NIL)) NIL)
                                   ("6" (HIDE 2) (("6" (GRIND) NIL NIL)) NIL)
                                   ("7" (HIDE 2) (("7" (GRIND) NIL NIL)) NIL))
                                  NIL)
                                 ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL)
                                 ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[[T -> real], [T -> Vector[n]] -> [T -> Vector[n]]]"
       |sigma_vector| NIL)
    (|same?| CONST-DECL "bool" |linear_map| NIL)
    (|p!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|f!1| SKOLEM-CONST-DECL "Map(m!1, p!1)" |linear_map_def| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (* CONST-DECL "Vector" |vectors| "vectors/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|l!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|n!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|m!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|g!1| SKOLEM-CONST-DECL "Map(n!1, m!1)" |linear_map_def| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (O CONST-DECL "Maping" |linear_map| NIL))
   SHOSTAK))
 (|bijecti_fun_equa| 0
  (|thm| "thm" 3483112991
   ("" (SKOSIMP)
    (("" (EXPAND "bijective?")
      (("" (FLATTEN)
        (("" (SPLIT)
          (("1" (EXPAND "injective?")
            (("1" (SKOSIMP)
              (("1" (INST -3 "x1!1" "x2!1")
                (("1" (LEMMA "extensionality_postulate[Vector[n],Vector[n]]")
                  (("1" (INST -1 "k!1" "h!1")
                    (("1" (ASSERT)
                      (("1" (NAME "hh" "k!1 = h!1")
                        (("1" (REPLACE -1)
                          (("1" (ASSERT)
                            (("1" (SKOSIMP)
                              (("1" (EXPAND "hh") (("1" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "surjective?")
            (("2" (SKOSIMP)
              (("2" (INST -3 "y!1")
                (("2" (SKOSIMP)
                  (("2" (CASE "k!1(x!1)=h!1(x!1)")
                    (("1" (INST 1 "x!1") (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (GRIND) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|bijective?| CONST-DECL "bool" |linear_map| NIL)) SHOSTAK)
  (|bijecti_fun_equa-1| NIL 3483090827
   ("" (SKOSIMP)
    (("" (GRIND) (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)) NIL)) NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL)
   SHOSTAK))
 (|equa_basis_n_TCC1| 0
  (|equa_basis_n_TCC1-1| NIL 3518781149 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Map_linear| TYPE-EQ-DECL NIL |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equa_basis_n_TCC2| 0
  (|equa_basis_n_TCC2-1| NIL 3518781149 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Map_linear| TYPE-EQ-DECL NIL |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equa_basis_n_TCC3| 0
  (|equa_basis_n_TCC3-1| NIL 3519034153 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|Map_linear| TYPE-EQ-DECL NIL |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|equa_basis_n| 0
  (|thm| "thm" 3520682693
   ("" (SKOSIMP)
    (("" (TYPEPRED "h!1")
      (("" (TYPEPRED "k!1")
        (("" (APPLY-EXTENSIONALITY 1)
          (("" (APPLY-EXTENSIONALITY 1)
            (("" (LEMMA "vec_repre_bases")
              (("" (INST -1 "n!1" "x!1")
                (("1" (REPLACE -1)
                  (("1" (EXPAND "linear_map_e?")
                    (("1" (INST -4 "n!1")
                      (("1" (INST -7 "n!1")
                        (("1" (EXPAND "linear_map_e?")
                          (("1" (INST -7 "x!1" "e(n!1)")
                            (("1" (REPLACE -7)
                              (("1" (INST -4 "x!1" "e(n!1)")
                                (("1" (REPLACE -4)
                                  (("1" (EXPAND "SigmaV" 1)
                                    (("1" (APPLY-EXTENSIONALITY 1)
                                      (("1" (HIDE 2 3)
                                        (("1" (LEMMA "sigma_eq[Index[n!1]]")
                                          (("1" (HIDE 2)
                                            (("1"
                                              (INST -1
                                               "LAMBDA (j: Index[n!1]): (x!1 * (h!1`mp o e(n!1)))(j)(x!2)"
                                               "LAMBDA (j: Index[n!1]): (x!1 * (k!1`mp o e(n!1)))(j)(x!2)"
                                               "n!1-1" "0")
                                              (("1"
                                                (NAME "ff"
                                                      "(FORALL (n: subrange(0, n!1 - 1)):
         (x!1 * (h!1`mp o e(n!1)))(n)(x!2) =
          (x!1 * (k!1`mp o e(n!1)))(n)(x!2))")
                                                (("1" (REPLACE -1)
                                                  (("1" (HIDE -1)
                                                    (("1" (CASE "ff")
                                                      (("1" (ASSERT)
                                                        (("1" (ASSERT)
                                                          (("1" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "ff" 1)
                                                        (("2" (SKOSIMP)
                                                          (("2" (REPLACE -9)
                                                            (("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (SKOSIMP)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (SKOSIMP)
                                                    (("3" (REPLACE -6)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKOSIMP)
                                                (("2" (SKOSIMP)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (SKOSIMP)
                                                (("3" (ASSERT)
                                                  (("3" (REPLACE -5)
                                                    (("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOSIMP)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP)
                                        (("2" (SKOSIMP)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("3" (SKOSIMP)
                                        (("3" (SKOSIMP)
                                          (("3" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (REPLACE -4) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL) (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|Map_linear| TYPE-EQ-DECL NIL |linear_map_def| NIL)
    (|vec_repre_bases| FORMULA-DECL NIL |linear_map_def| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (* CONST-DECL "[[T -> real], [T -> Vector[n]] -> [T -> Vector[n]]]"
       |sigma_vector| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|sigma_eq| FORMULA-DECL NIL |sigma| "reals/")
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (* CONST-DECL "Vector" |vectors| "vectors/")
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ff| SKOLEM-CONST-DECL "boolean" |linear_map_def| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|e| CONST-DECL "[below[n] -> Vector[n]]" |linear_map_def| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|n!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|m!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (|h!1| SKOLEM-CONST-DECL "Map_linear(n!1, m!1)" |linear_map_def| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   SHOSTAK)
  (|thm| "thm" 3519038240
   ("" (SKOSIMP)
    (("" (TYPEPRED "h!1")
      (("" (TYPEPRED "k!1")
        (("" (APPLY-EXTENSIONALITY 1)
          (("" (APPLY-EXTENSIONALITY 1)
            (("" (LEMMA "vec_repre_bases")
              (("" (INST -1 "n!1" "x!1")
                (("1" (REPLACE -1)
                  (("1" (EXPAND "linear_map_e?")
                    (("1" (INST -4 "n!1")
                      (("1" (INST -7 "n!1")
                        (("1" (EXPAND "linear_map_e?")
                          (("1" (INST -7 "x!1" "e(n!1)")
                            (("1" (REPLACE -7)
                              (("1" (INST -4 "x!1" "e(n!1)")
                                (("1" (REPLACE -4)
                                  (("1" (EXPAND "SigmaV" 1)
                                    (("1" (APPLY-EXTENSIONALITY 1)
                                      (("1" (HIDE 2 3)
                                        (("1" (LEMMA "sigma_eq[Index[n!1]]")
                                          (("1" (HIDE 2)
                                            (("1"
                                              (INST -1
                                               "LAMBDA (j: Index[n!1]): (x!1 * (h!1`mp o e(n!1)))(j)(x!2)"
                                               "LAMBDA (j: Index[n!1]): (x!1 * (k!1`mp o e(n!1)))(j)(x!2)"
                                               "n!1-1" "0")
                                              (("1"
                                                (NAME "ff"
                                                      "(FORALL (n: subrange(0, n!1 - 1)):
         (x!1 * (h!1`mp o e(n!1)))(n)(x!2) =
          (x!1 * (k!1`mp o e(n!1)))(n)(x!2))")
                                                (("1" (REPLACE -1)
                                                  (("1" (HIDE -1)
                                                    (("1" (CASE "ff")
                                                      (("1" (ASSERT)
                                                        (("1" (ASSERT)
                                                          (("1" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (EXPAND "ff" 1)
                                                        (("2" (SKOSIMP)
                                                          (("2" (REPLACE -9)
                                                            (("2" (ASSERT)
                                                              (("2" (GRIND) NIL
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (SKOSIMP)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (SKOSIMP)
                                                    (("3" (REPLACE -6)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (SKOSIMP)
                                                (("2" (SKOSIMP)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (SKOSIMP)
                                                (("3" (ASSERT)
                                                  (("3" (REPLACE -5)
                                                    (("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOSIMP)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -6)
                                        (("2" (REPLACE -3)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("3" (SKOSIMP)
                                        (("3" (SKOSIMP)
                                          (("3" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("4" (SKOSIMP)
                                        (("4" (SKOSIMP)
                                          (("4" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("5" (SKOSIMP)
                                        (("5" (SKOSIMP)
                                          (("5" (ASSERT) NIL NIL)) NIL))
                                        NIL)
                                       ("6" (SKOSIMP)
                                        (("6" (SKOSIMP)
                                          (("6" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (REPLACE -4) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK)
  (|thm| "thm" 3483351540
   ("" (SKOSIMP)
    (("" (EXPAND "linear_map_e?")
      (("" (APPLY-EXTENSIONALITY 1)
        (("1" (EXPAND "same_dim?") (("1" (PROPAX) NIL NIL)) NIL)
         ("2" (EXPAND "same_dim?") (("2" (PROPAX) NIL NIL)) NIL)
         ("3" (APPLY-EXTENSIONALITY 1)
          (("3" (LEMMA "vec_repre_bases")
            (("3" (INST -1 "h!1`dom" "x!1")
              (("3" (REPLACE -1)
                (("3" (INST -2 "h!1`dom")
                  (("3" (INST -3 "h!1`dom")
                    (("3" (EXPAND "linear_map_e?")
                      (("3" (INST -2 "x!1" "e(h!1`dom)")
                        (("3" (REPLACE -2)
                          (("3" (INST -3 "x!1" "e(h!1`dom)")
                            (("1" (EXPAND "SigmaV") (("1" (POSTPONE) NIL NIL))
                              NIL)
                             ("2" (POSTPONE) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
   SHOSTAK)
  (|equa_basis_n-1| NIL 3483186415
   ("" (SKOSIMP)
    (("" (LEMMA "vec_repre_base_map")
      (("" (LEMMA "extensionality[Vector[n],Vector[n]]")
        (("" (INST -1 "h!1" "k!1")
          (("" (NAME "mm" "FORALL (x: Vector[n]): h!1(x) = k!1(x)")
            (("" (REPLACE -1)
              (("" (CASE "mm")
                (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (EXPAND "mm" 1)
                  (("2" (SKOSIMP)
                    (("2" (COPY -3)
                      (("2" (INST -1 "e!1" "h!1" "x!1")
                        (("2" (ASSERT)
                          (("2" (ASSERT)
                            (("2" (INST -2 "e!1" "k!1" "x!1")
                              (("2" (ASSERT)
                                (("2" (EXPAND "sigmaV")
                                  (("2" (POSTPONE) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL)
   SHOSTAK))
 (|linear_map_characterization| 0
  (|teo| "fin" 3546882650
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1" (INST -4 "x!1(0)" "F!1(0)")
                                            (("1" (EXPAND "*" -4 1)
                                              (("1"
                                                (CASE
                                                    "f!1`mp(LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -5)
                                                    (("1" (HIDE -1)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (HIDE -6)
                                                          (("1"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (EXPAND "*")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (SKOSIMP)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (SKOSIMP)
                                                              (("3" (SKOSIMP)
                                                                (("3"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (REPLACE -1)
                                                                  (("4"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -4 2)
                                                  (("2"
                                                    (LEMMA
                                                     "congruence[Vector[f!1`dom],Vector[n!1]]")
                                                    (("2"
                                                      (INST -1 "f!1`mp"
                                                       "f!1`mp"
                                                       "LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)"
                                                       "LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)")
                                                      (("1"
                                                        (CASE
                                                            " ((LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =
        (LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)))")
                                                        (("1" (REPLACE -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("2"
                                                              (TYPEPRED "f!1")
                                                              (("2" (SKOSIMP)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (TYPEPRED "f!1")
                                                          (("2" (REPLACE -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (SKOSIMP)
                                                        (("3" (TYPEPRED "f!1")
                                                          (("3" (REPLACE -2)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (TYPEPRED "f!1")
                                                    (("3" (REPLACE -1)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP)
                                              (("2" (TYPEPRED "f!1")
                                                (("2" (REPLACE -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o")
                          (("2" (LEMMA "SigmaV_last[below[1+j!1],n!1]")
                            (("1"
                              (INST -1
                               " LAMBDA (i: Index[1 + j!1]): x!1(i) * F!1(i)"
                               "j!1" "0")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1)
                                    (("1" (EXPAND "*")
                                      (("1" (EXPAND "+")
                                        (("1" (COPY -3)
                                          (("1" (EXPAND "linear_map?" -1)
                                            (("1" (FLATTEN)
                                              (("1" (EXPAND "additive?")
                                                (("1"
                                                  (INST -1
                                                   "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)"
                                                   "LAMBDA (i_1: Index[n!1]):x!1(j!1) * F!1(j!1)(i_1)")
                                                  (("1" (EXPAND "+" -1 1)
                                                    (("1"
                                                      (LEMMA
                                                       "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1"
                                                          (INST -3 "f!1`mp"
                                                           "f!1`mp"
                                                           "LAMBDA (i_1: Index[f!1`dom]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)"
                                                           "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)")
                                                          (("1"
                                                            (CASE
                                                                " ((LAMBDA (i_1: Index[f!1`dom]):
          SigmaV(0, j!1 - 1,
                 LAMBDA (i: Index[1 + j!1]):
                   LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                (i_1)
           + x!1(j!1) * F!1(j!1)(i_1))
        =
        (LAMBDA (i_1: Index[n!1]):
           SigmaV(0, j!1 - 1,
                  LAMBDA (i: Index[1 + j!1]):
                    LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                 (i_1)
            + x!1(j!1) * F!1(j!1)(i_1)))")
                                                            (("1"
                                                              (REPLACE -1 -4)
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (REPLACE -4)
                                                                  (("1"
                                                                    (HIDE -1
                                                                     -4)
                                                                    (("1"
                                                                      (INST -4
                                                                       " LAMBDA (i: Index[j!1]): x!1(i)"
                                                                       " LAMBDA (i: Index[j!1]): F!1(i)")
                                                                      (("1"
                                                                        (CASE
                                                                            "SigmaV[below[j!1], n!1]
               (0, j!1 - 1,
                LAMBDA (i_2: Index[j!1]):
                  LAMBDA (i_1: Index[n!1]): x!1(i_2) * F!1(i_2)(i_1))=LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)")
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           -5)
                                                                          (("1"
                                                                            (HIDE
                                                                             -1)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -4
                                                                               2)
                                                                              (("1"
                                                                                (HIDE
                                                                                 -4)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "homogeneous?")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (INST
                                                                                       -3
                                                                                       "x!1(j!1)"
                                                                                       "F!1(j!1)")
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "congruence[Vector[f!1`dom],Vector[f!1`codom
]]")
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "f!1`mp"
                                                                                           "f!1`mp"
                                                                                           "LAMBDA (i: Index[f!1`dom]): x!1(j!1) * F!1(j!1)(i)"
                                                                                           "LAMBDA (i_1: Index[n!1]): x!1(j!1) * F!1(j!1)(i_1)")
                                                                                          (("1"
                                                                                            (CASE
                                                                                                " ((LAMBDA (i: Index[f!1`dom]): x!1(j!1) * F!1(j!1)(i)) =
        (LAMBDA (i_1: Index[n!1]): x!1(j!1) * F!1(j!1)(i_1)))")
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               -2)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "SigmaV_last[below[1+j!1],f!1`codom]")
                                                                                                      (("1"
                                                                                                        (HIDE
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           " LAMBDA (i: Index[1 + j!1]):
              LAMBDA (i_1: Index[f!1`codom]): x!1(i) * f!1`mp(F!1(i))(i_1)"
                                                                                                           "j!1"
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "SigmaV")
                                                                                                              (("1"
                                                                                                                (CASE
                                                                                                                    " (LAMBDA (i_1: below[f!1`codom]):
         sigma(0, j!1,
               LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1)))= (LAMBDA (i_1: below[n!1]):
          sigma(0, j!1,
                LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1)))")
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (REPLACE
                                                                                                                     -2
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (HIDE
                                                                                                                       -1
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (CASE
                                                                                                                            " (LAMBDA (i: below[n!1]):
          sigma(0, j!1 - 1,
                LAMBDA (j: below[j!1]): x!1(j) * f!1`mp(F!1(j))(i)))= LAMBDA (i_1: below[f!1`codom]):
          sigma(0, j!1 - 1,
                LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1))")
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -1
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (PROPAX)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (HIDE
                                                                                                                           3)
                                                                                                                          (("2"
                                                                                                                            (APPLY-EXTENSIONALITY)
                                                                                                                            (("1"
                                                                                                                              (HIDE
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (LEMMA
                                                                                                                                 "sigma_restrict_dom")
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "j!1"
                                                                                                                                   "j!1"
                                                                                                                                   "LAMBDA (j: below[j!1]): x!1(j) * f!1`mp(F!1(j))(x!2)"
                                                                                                                                   " LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    NIL
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (HIDE
                                                                                                                                     2
                                                                                                                                     3
                                                                                                                                     -4)
                                                                                                                                    (("2"
                                                                                                                                      (SKOSIMP)
                                                                                                                                      (("2"
                                                                                                                                        (SKOSIMP)
                                                                                                                                        (("2"
                                                                                                                                          (REPLACE
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("3"
                                                                                                                                    (HIDE
                                                                                                                                     2
                                                                                                                                     3
                                                                                                                                     -3
                                                                                                                                     -4)
                                                                                                                                    (("3"
                                                                                                                                      (SKOSIMP)
                                                                                                                                      (("3"
                                                                                                                                        (SKOSIMP)
                                                                                                                                        (("3"
                                                                                                                                          (REPLACE
                                                                                                                                           -1)
                                                                                                                                          (("3"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (SKOSIMP)
                                                                                                                              (("2"
                                                                                                                                (REPLACE
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("3"
                                                                                                                              (SKOSIMP)
                                                                                                                              (("3"
                                                                                                                                (SKOSIMP)
                                                                                                                                (("3"
                                                                                                                                  (TYPEPRED
                                                                                                                                   "y!1")
                                                                                                                                  (("3"
                                                                                                                                    (ASSERT)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("4"
                                                                                                                              (SKOSIMP)
                                                                                                                              (("4"
                                                                                                                                (SKOSIMP)
                                                                                                                                (("4"
                                                                                                                                  (REPLACE
                                                                                                                                   -1)
                                                                                                                                  (("4"
                                                                                                                                    (ASSERT)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("5"
                                                                                                                              (SKOSIMP)
                                                                                                                              (("5"
                                                                                                                                (SKOSIMP)
                                                                                                                                (("5"
                                                                                                                                  (TYPEPRED
                                                                                                                                   "y!1")
                                                                                                                                  (("5"
                                                                                                                                    (ASSERT)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("6"
                                                                                                                              (SKOSIMP)
                                                                                                                              (("6"
                                                                                                                                (SKOSIMP)
                                                                                                                                (("6"
                                                                                                                                  (REPLACE
                                                                                                                                   -1)
                                                                                                                                  (("6"
                                                                                                                                    (ASSERT)
                                                                                                                                    NIL
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("3"
                                                                                                                          (SKOSIMP)
                                                                                                                          (("3"
                                                                                                                            (REPLACE
                                                                                                                             -2)
                                                                                                                            (("3"
                                                                                                                              (ASSERT)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("4"
                                                                                                                          (SKOSIMP)
                                                                                                                          (("4"
                                                                                                                            (SKOSIMP)
                                                                                                                            (("4"
                                                                                                                              (TYPEPRED
                                                                                                                               "y!1")
                                                                                                                              (("4"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("5"
                                                                                                                          (SKOSIMP)
                                                                                                                          (("5"
                                                                                                                            (SKOSIMP)
                                                                                                                            (("5"
                                                                                                                              (REPLACE
                                                                                                                               -1)
                                                                                                                              (("5"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (HIDE
                                                                                                                   -1
                                                                                                                   -5
                                                                                                                   3)
                                                                                                                  (("2"
                                                                                                                    (APPLY-EXTENSIONALITY)
                                                                                                                    (("1"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("1"
                                                                                                                        (REPLACE
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("2"
                                                                                                                        (SKOSIMP)
                                                                                                                        (("2"
                                                                                                                          (TYPEPRED
                                                                                                                           "y!1")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("3"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("3"
                                                                                                                        (SKOSIMP)
                                                                                                                        (("3"
                                                                                                                          (REPLACE
                                                                                                                           -1)
                                                                                                                          (("3"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("4"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("4"
                                                                                                                        (SKOSIMP)
                                                                                                                        (("4"
                                                                                                                          (TYPEPRED
                                                                                                                           "y!1")
                                                                                                                          (("4"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("5"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("5"
                                                                                                                        (SKOSIMP)
                                                                                                                        (("5"
                                                                                                                          (REPLACE
                                                                                                                           -1)
                                                                                                                          (("5"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("3"
                                                                                                                  (SKOSIMP)
                                                                                                                  (("3"
                                                                                                                    (REPLACE
                                                                                                                     -3)
                                                                                                                    (("3"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("4"
                                                                                                                  (SKOSIMP)
                                                                                                                  (("4"
                                                                                                                    (REPLACE
                                                                                                                     -2)
                                                                                                                    (("4"
                                                                                                                      (SKOSIMP)
                                                                                                                      (("4"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("5"
                                                                                                                  (SKOSIMP)
                                                                                                                  (("5"
                                                                                                                    (SKOSIMP)
                                                                                                                    (("5"
                                                                                                                      (TYPEPRED
                                                                                                                       "y!1")
                                                                                                                      (("5"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("6"
                                                                                                                  (SKOSIMP)
                                                                                                                  (("6"
                                                                                                                    (SKOSIMP)
                                                                                                                    (("6"
                                                                                                                      (REPLACE
                                                                                                                       -2)
                                                                                                                      (("6"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (SKOSIMP)
                                                                                                            (("2"
                                                                                                              (SKOSIMP)
                                                                                                              (("2"
                                                                                                                (REPLACE
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (HIDE
                                                                                               -1
                                                                                               -4
                                                                                               -6
                                                                                               3)
                                                                                              (("2"
                                                                                                (APPLY-EXTENSIONALITY)
                                                                                                (("2"
                                                                                                  (SKOSIMP)
                                                                                                  (("2"
                                                                                                    (REPLACE
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (SKOSIMP)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (SKOSIMP)
                                                                                        (("2"
                                                                                          (REPLACE
                                                                                           -1)
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (HIDE
                                                                           3)
                                                                          (("2"
                                                                            (HIDE
                                                                             -4)
                                                                            (("2"
                                                                              (APPLY-EXTENSIONALITY)
                                                                              (("1"
                                                                                (HIDE
                                                                                 2)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "SigmaV")
                                                                                  (("1"
                                                                                    (LEMMA
                                                                                     "sigma_restrict_dom")
                                                                                    (("1"
                                                                                      (INST
                                                                                       -1
                                                                                       "j!1"
                                                                                       "j!1"
                                                                                       "LAMBDA (j: below[j!1]): x!1(j) * F!1(j)(x!2)"
                                                                                       "LAMBDA (j: Index[1 + j!1]): x!1(j) * F!1(j)(x!2)")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (SKOSIMP)
                                                                                (("2"
                                                                                  (SKOSIMP)
                                                                                  (("2"
                                                                                    (TYPEPRED
                                                                                     "y!1")
                                                                                    (("2"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("3"
                                                                                (SKOSIMP)
                                                                                (("3"
                                                                                  (TYPEPRED
                                                                                   "y!1")
                                                                                  (("3"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("3"
                                                                          (SKOSIMP)
                                                                          (("3"
                                                                            (TYPEPRED
                                                                             "y!1")
                                                                            (("3"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (HIDE 3)
                                                              (("2"
                                                                (HIDE -4 -6)
                                                                (("2" (HIDE -3)
                                                                  (("2"
                                                                    (APPLY-EXTENSIONALITY)
                                                                    (("1"
                                                                      (SKOSIMP)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKOSIMP)
                                                                      (("2"
                                                                        (SKOSIMP)
                                                                        (("2"
                                                                          (TYPEPRED
                                                                           "y!1")
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (SKOSIMP)
                                                                      (("3"
                                                                        (SKOSIMP)
                                                                        (("3"
                                                                          (TYPEPRED
                                                                           "y!1")
                                                                          (("3"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (HIDE 3 -4)
                                                              (("3" (SKOSIMP)
                                                                (("3" (HIDE -3)
                                                                  (("3"
                                                                    (REPLACE
                                                                     -1)
                                                                    (("3"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (HIDE -6 3)
                                                                  (("4"
                                                                    (HIDE -5)
                                                                    (("4"
                                                                      (TYPEPRED
                                                                       "y!1")
                                                                      (("4"
                                                                        (ASSERT)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("5" (SKOSIMP)
                                                              (("5" (SKOSIMP)
                                                                (("5"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("5"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2" (SKOSIMP)
                                                            (("2" (HIDE -3 3)
                                                              (("2"
                                                                (REPLACE -1)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("3" (SKOSIMP)
                                                            (("3" (SKOSIMP)
                                                              (("3"
                                                                (TYPEPRED
                                                                 "y!1")
                                                                (("3" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("4" (SKOSIMP)
                                                            (("4" (SKOSIMP)
                                                              (("4"
                                                                (TYPEPRED
                                                                 "y!1")
                                                                (("4" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOSIMP)
                                                    (("2" (TYPEPRED "f!1")
                                                      (("2" (REPLACE -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (SKOSIMP)
                                                    (("3" (SKOSIMP)
                                                      (("3" (TYPEPRED "y!1")
                                                        (("3" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (SKOSIMP)
                              (("2" (TYPEPRED "y!1") (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "linear_map_e?")
        (("2" (FLATTEN)
          (("2" (EXPAND "linear_map_e?")
            (("2" (EXPAND "linear_map?")
              (("2" (SPLIT)
                (("1" (EXPAND "additive?")
                  (("1" (SKOSIMP)
                    (("1" (INST -1 "2")
                      (("1" (ASSERT)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "sigma")
                                (("1" (INST -1 "LAMBDA (i:below[2]):1" "_")
                                  (("1" (ASSERT)
                                    (("1"
                                      (INST -1
                                       "(LAMBDA (i: below[2]): x!1)   WITH [(1) := y!1]")
                                      (("1" (ASSERT)
                                        (("1" (GRIND)
                                          (("1"
                                            (CASE
                                                " f!1`mp(LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) =f!1`mp(x!1 + y!1)")
                                            (("1" (REPLACE -1 -2)
                                              (("1" (HIDE -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (EXPAND "+" 1 2)
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (SKOSIMP)
                                                          (("1" (REPLACE -2)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 2)
                                              (("2"
                                                (LEMMA
                                                 "congruence[Vector[n!1],Vector[f!1`codom]]")
                                                (("2"
                                                  (INST -1 "f!1`mp" "f!1`mp"
                                                   "LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)"
                                                   "x!1+y!1")
                                                  (("1"
                                                    (CASE
                                                        " (LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) = x!1 + y!1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      NIL NIL)
                                                     ("3" (TYPEPRED "f!1")
                                                      (("3" (SKOSIMP)
                                                        (("3" (REPLACE -1)
                                                          (("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOSIMP)
                                                    (("2" (TYPEPRED "f!1")
                                                      (("2" (REPLACE -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (TYPEPRED "f!1")
                                              (("3" (SKOSIMP)
                                                (("3" (REPLACE -1)
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP)
                                        (("2" (TYPEPRED "f!1")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "homogeneous?")
                  (("2" (SKOSIMP)
                    (("2" (INST -1 "1")
                      (("2"
                        (INST -1 "LAMBDA (i: below[1]): a!1"
                         "LAMBDA (i: below[1]): x!1")
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "f!1")
                                  (("1" (EXPAND "*" -3 1)
                                    (("1" (EXPAND "*" -3 1)
                                      (("1" (EXPAND "*" 1 1)
                                        (("1"
                                          (CASE
                                              "f!1`mp(LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) = f!1`mp(LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i))")
                                          (("1" (REPLACE -1 -4)
                                            (("1" (REPLACE -4 1)
                                              (("1" (HIDE -1)
                                                (("1" (HIDE -3)
                                                  (("1" (EXPAND "*")
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (HIDE 2)
                                                        (("1" (EXPAND "*")
                                                          (("1" (EXPAND "o")
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (REPLACE -2)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -3 2)
                                            (("2"
                                              (LEMMA
                                               "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                              (("2"
                                                (INST -1 "f!1`mp" "f!1`mp"
                                                 "LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)"
                                                 "LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)")
                                                (("1"
                                                  (CASE
                                                      " ((LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) =
        (LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE -1 2)
                                                    (("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("2" (SKOSIMP)
                                                        (("2" (REPLACE -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (SKOSIMP)
                                                    (("3" (REPLACE -2)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (REPLACE -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (SKOSIMP)
                                            (("3" (REPLACE -1)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (SKOSIMP)
                            (("2" (TYPEPRED "f!1")
                              (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|T_low| TYPE-EQ-DECL NIL |sigma| "reals/")
    (|T_high| TYPE-EQ-DECL NIL |sigma| "reals/")
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|sigma_restrict_dom| FORMULA-DECL NIL |sigma_lemmas| NIL)
    (|additive?| CONST-DECL "bool" |linear_map_def| NIL)
    (+ CONST-DECL "real" |vectors| "vectors/")
    (|SigmaV_last| FORMULA-DECL NIL |sigma_vector| NIL)
    (|SigmaV| CONST-DECL "Vector[n]" |sigma_vector| NIL)
    (|linear_map?| CONST-DECL "bool" |linear_map_def| NIL)
    (|homogeneous?| CONST-DECL "bool" |linear_map_def| NIL)
    (* CONST-DECL "Vector" |vectors| "vectors/")
    (|congruence| FORMULA-DECL NIL |functions| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|j!1| SKOLEM-CONST-DECL "nat" |linear_map_def| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|integer| NONEMPTY-TYPE-FROM-DECL NIL |integers| NIL)
    (|even_plus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (* CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|f!1| SKOLEM-CONST-DECL "Map(n!1, n!1)" |linear_map_def| NIL)
    (|n!1| SKOLEM-CONST-DECL "posnat" |linear_map_def| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|Index| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (* CONST-DECL "[[T -> real], [T -> Vector[n]] -> [T -> Vector[n]]]"
       |sigma_vector| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|sigma| DEF-DECL "real" |sigma| "reals/")
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|Map| TYPE-EQ-DECL NIL |linear_map| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|linear_map_e?| CONST-DECL "bool" |linear_map_def| NIL)
    (|nonneg_int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|Maping| TYPE-EQ-DECL NIL |linear_map| NIL)
    (|Vector| TYPE-EQ-DECL NIL |vectors| "vectors/")
    (|posnat| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|scal_1| FORMULA-DECL NIL |vectors| "vectors/"))
   SHOSTAK)
  (|sigmas| "sigmas" 3546882051
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1" (INST -4 "x!1(0)" "F!1(0)")
                                            (("1" (EXPAND "*" -4 1)
                                              (("1"
                                                (CASE
                                                    "f!1`mp(LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -5)
                                                    (("1" (HIDE -1)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (HIDE -6)
                                                          (("1"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (EXPAND "*")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (SKOSIMP)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (SKOSIMP)
                                                              (("3" (SKOSIMP)
                                                                (("3"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (REPLACE -1)
                                                                  (("4"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -4 2)
                                                  (("2"
                                                    (LEMMA
                                                     "congruence[Vector[f!1`dom],Vector[n!1]]")
                                                    (("2"
                                                      (INST -1 "f!1`mp"
                                                       "f!1`mp"
                                                       "LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)"
                                                       "LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)")
                                                      (("1"
                                                        (CASE
                                                            " ((LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =
        (LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)))")
                                                        (("1" (REPLACE -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("2"
                                                              (TYPEPRED "f!1")
                                                              (("2" (SKOSIMP)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (TYPEPRED "f!1")
                                                          (("2" (REPLACE -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (SKOSIMP)
                                                        (("3" (TYPEPRED "f!1")
                                                          (("3" (REPLACE -2)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (TYPEPRED "f!1")
                                                    (("3" (REPLACE -1)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP)
                                              (("2" (TYPEPRED "f!1")
                                                (("2" (REPLACE -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o")
                          (("2" (LEMMA "SigmaV_last[below[1+j!1],n!1]")
                            (("1"
                              (INST -1
                               " LAMBDA (i: Index[1 + j!1]): x!1(i) * F!1(i)"
                               "j!1" "0")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1)
                                    (("1" (EXPAND "*")
                                      (("1" (EXPAND "+")
                                        (("1" (COPY -3)
                                          (("1" (EXPAND "linear_map?" -1)
                                            (("1" (FLATTEN)
                                              (("1" (EXPAND "additive?")
                                                (("1"
                                                  (INST -1
                                                   "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)"
                                                   "LAMBDA (i_1: Index[n!1]):x!1(j!1) * F!1(j!1)(i_1)")
                                                  (("1" (EXPAND "+" -1 1)
                                                    (("1"
                                                      (LEMMA
                                                       "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1"
                                                          (INST -3 "f!1`mp"
                                                           "f!1`mp"
                                                           "LAMBDA (i_1: Index[f!1`dom]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)"
                                                           "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)")
                                                          (("1"
                                                            (CASE
                                                                " ((LAMBDA (i_1: Index[f!1`dom]):
          SigmaV(0, j!1 - 1,
                 LAMBDA (i: Index[1 + j!1]):
                   LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                (i_1)
           + x!1(j!1) * F!1(j!1)(i_1))
        =
        (LAMBDA (i_1: Index[n!1]):
           SigmaV(0, j!1 - 1,
                  LAMBDA (i: Index[1 + j!1]):
                    LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                 (i_1)
            + x!1(j!1) * F!1(j!1)(i_1)))")
                                                            (("1"
                                                              (REPLACE -1 -4)
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (REPLACE -4)
                                                                  (("1"
                                                                    (HIDE -1
                                                                     -4)
                                                                    (("1"
                                                                      (INST -4
                                                                       " LAMBDA (i: Index[j!1]): x!1(i)"
                                                                       " LAMBDA (i: Index[j!1]): F!1(i)")
                                                                      (("1"
                                                                        (CASE
                                                                            "SigmaV[below[j!1], n!1]
               (0, j!1 - 1,
                LAMBDA (i_2: Index[j!1]):
                  LAMBDA (i_1: Index[n!1]): x!1(i_2) * F!1(i_2)(i_1))=LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)")
                                                                        (("1"
                                                                          (REPLACE
                                                                           -1
                                                                           -5)
                                                                          (("1"
                                                                            (HIDE
                                                                             -1)
                                                                            (("1"
                                                                              (REPLACE
                                                                               -4
                                                                               2)
                                                                              (("1"
                                                                                (HIDE
                                                                                 -4)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "homogeneous?")
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "*")
                                                                                    (("1"
                                                                                      (INST
                                                                                       -3
                                                                                       "x!1(j!1)"
                                                                                       "F!1(j!1)")
                                                                                      (("1"
                                                                                        (LEMMA
                                                                                         "congruence[Vector[f!1`dom],Vector[f!1`codom
]]")
                                                                                        (("1"
                                                                                          (INST
                                                                                           -1
                                                                                           "f!1`mp"
                                                                                           "f!1`mp"
                                                                                           "LAMBDA (i: Index[f!1`dom]): x!1(j!1) * F!1(j!1)(i)"
                                                                                           "LAMBDA (i_1: Index[n!1]): x!1(j!1) * F!1(j!1)(i_1)")
                                                                                          (("1"
                                                                                            (CASE
                                                                                                " ((LAMBDA (i: Index[f!1`dom]): x!1(j!1) * F!1(j!1)(i)) =
        (LAMBDA (i_1: Index[n!1]): x!1(j!1) * F!1(j!1)(i_1)))")
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -1
                                                                                               -2)
                                                                                              (("1"
                                                                                                (REPLACE
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (REPLACE
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (HIDE
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "SigmaV_last[below[1+j!1],f!1`codom]")
                                                                                                      (("1"
                                                                                                        (HIDE
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -1
                                                                                                           " LAMBDA (i: Index[1 + j!1]):
              LAMBDA (i_1: Index[f!1`codom]): x!1(i) * f!1`mp(F!1(i))(i_1)"
                                                                                                           "j!1"
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (EXPAND
                                                                                                               "SigmaV")
                                                                                                              (("1"
                                                                                                                (CASE
                                                                                                                    " (LAMBDA (i_1: below[f!1`codom]):
         sigma(0, j!1,
               LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1)))= (LAMBDA (i_1: below[n!1]):
          sigma(0, j!1,
                LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1)))")
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -1
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (REPLACE
                                                                                                                     -2
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (HIDE
                                                                                                                       -1
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (CASE
                                                                                                                            " (LAMBDA (i: below[n!1]):
          sigma(0, j!1 - 1,
                LAMBDA (j: below[j!1]): x!1(j) * f!1`mp(F!1(j))(i)))= LAMBDA (i_1: below[f!1`codom]):
          sigma(0, j!1 - 1,
                LAMBDA (j: below[1 + j!1]): x!1(j) * f!1`mp(F!1(j))(i_1))")
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -1
                                                                                                                           2)
                                                                                                                          (("1"
                                                                                                                            (PROPAX)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (HIDE
                                                                                                                           3)
                                                                                                                          (("2"
                                                                                                                            (APPLY-EXTENSIONALITY)
                                                                                                                            (("1"
                                                                                                                              (HIDE
                                                                                                                               2)
                                                                                                                              (("1"
                                                                                                                                (POSTPONE)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL)
                                                                                                                             ("2"
                                                                                                                              (POSTPONE)
                                                                                                                              NIL
                                                                                                                              NIL)
                                                                                                                             ("3"
                                                                                                                              (POSTPONE)
                                                                                                                              NIL
                                                                                                                              NIL)
                                                                                                                             ("4"
                                                                                                                              (POSTPONE)
                                                                                                                              NIL
                                                                                                                              NIL)
                                                                                                                             ("5"
                                                                                                                              (POSTPONE)
                                                                                                                              NIL
                                                                                                                              NIL)
                                                                                                                             ("6"
                                                                                                                              (POSTPONE)
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("3"
                                                                                                                          (POSTPONE)
                                                                                                                          NIL
                                                                                                                          NIL)
                                                                                                                         ("4"
                                                                                                                          (POSTPONE)
                                                                                                                          NIL
                                                                                                                          NIL)
                                                                                                                         ("5"
                                                                                                                          (POSTPONE)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("3"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("4"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("5"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("6"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (POSTPONE)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (POSTPONE)
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (POSTPONE)
                                                                                            NIL
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (POSTPONE)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (POSTPONE)
                                                                          NIL
                                                                          NIL)
                                                                         ("3"
                                                                          (POSTPONE)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (POSTPONE)
                                                              NIL NIL)
                                                             ("3" (POSTPONE)
                                                              NIL NIL)
                                                             ("4" (POSTPONE)
                                                              NIL NIL)
                                                             ("5" (POSTPONE)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2" (POSTPONE) NIL
                                                            NIL)
                                                           ("3" (POSTPONE) NIL
                                                            NIL)
                                                           ("4" (POSTPONE) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (POSTPONE) NIL NIL)
                                                   ("3" (POSTPONE) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (POSTPONE) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "linear_map_e?")
        (("2" (FLATTEN)
          (("2" (EXPAND "linear_map_e?")
            (("2" (EXPAND "linear_map?")
              (("2" (SPLIT)
                (("1" (EXPAND "additive?")
                  (("1" (SKOSIMP)
                    (("1" (INST -1 "2")
                      (("1" (ASSERT)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "sigma")
                                (("1" (INST -1 "LAMBDA (i:below[2]):1" "_")
                                  (("1" (ASSERT)
                                    (("1"
                                      (INST -1
                                       "(LAMBDA (i: below[2]): x!1)   WITH [(1) := y!1]")
                                      (("1" (ASSERT)
                                        (("1" (GRIND)
                                          (("1"
                                            (CASE
                                                " f!1`mp(LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) =f!1`mp(x!1 + y!1)")
                                            (("1" (REPLACE -1 -2)
                                              (("1" (HIDE -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (EXPAND "+" 1 2)
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (SKOSIMP)
                                                          (("1" (REPLACE -2)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 2)
                                              (("2"
                                                (LEMMA
                                                 "congruence[Vector[n!1],Vector[f!1`codom]]")
                                                (("2"
                                                  (INST -1 "f!1`mp" "f!1`mp"
                                                   "LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)"
                                                   "x!1+y!1")
                                                  (("1"
                                                    (CASE
                                                        " (LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) = x!1 + y!1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      NIL NIL)
                                                     ("3" (TYPEPRED "f!1")
                                                      (("3" (SKOSIMP)
                                                        (("3" (REPLACE -1)
                                                          (("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOSIMP)
                                                    (("2" (TYPEPRED "f!1")
                                                      (("2" (REPLACE -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (TYPEPRED "f!1")
                                              (("3" (SKOSIMP)
                                                (("3" (REPLACE -1)
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP)
                                        (("2" (TYPEPRED "f!1")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "homogeneous?")
                  (("2" (SKOSIMP)
                    (("2" (INST -1 "1")
                      (("2"
                        (INST -1 "LAMBDA (i: below[1]): a!1"
                         "LAMBDA (i: below[1]): x!1")
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "f!1")
                                  (("1" (EXPAND "*" -3 1)
                                    (("1" (EXPAND "*" -3 1)
                                      (("1" (EXPAND "*" 1 1)
                                        (("1"
                                          (CASE
                                              "f!1`mp(LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) = f!1`mp(LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i))")
                                          (("1" (REPLACE -1 -4)
                                            (("1" (REPLACE -4 1)
                                              (("1" (HIDE -1)
                                                (("1" (HIDE -3)
                                                  (("1" (EXPAND "*")
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (HIDE 2)
                                                        (("1" (EXPAND "*")
                                                          (("1" (EXPAND "o")
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (REPLACE -2)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -3 2)
                                            (("2"
                                              (LEMMA
                                               "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                              (("2"
                                                (INST -1 "f!1`mp" "f!1`mp"
                                                 "LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)"
                                                 "LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)")
                                                (("1"
                                                  (CASE
                                                      " ((LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) =
        (LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE -1 2)
                                                    (("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("2" (SKOSIMP)
                                                        (("2" (REPLACE -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (SKOSIMP)
                                                    (("3" (REPLACE -2)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (REPLACE -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (SKOSIMP)
                                            (("3" (REPLACE -1)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (SKOSIMP)
                            (("2" (TYPEPRED "f!1")
                              (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   (NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
    NIL NIL NIL NIL)
   SHOSTAK)
  (|cas| "cas" 3546881191
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1" (INST -4 "x!1(0)" "F!1(0)")
                                            (("1" (EXPAND "*" -4 1)
                                              (("1"
                                                (CASE
                                                    "f!1`mp(LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -5)
                                                    (("1" (HIDE -1)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (HIDE -6)
                                                          (("1"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (EXPAND "*")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (SKOSIMP)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (SKOSIMP)
                                                              (("3" (SKOSIMP)
                                                                (("3"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (REPLACE -1)
                                                                  (("4"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -4 2)
                                                  (("2"
                                                    (LEMMA
                                                     "congruence[Vector[f!1`dom],Vector[n!1]]")
                                                    (("2"
                                                      (INST -1 "f!1`mp"
                                                       "f!1`mp"
                                                       "LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)"
                                                       "LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)")
                                                      (("1"
                                                        (CASE
                                                            " ((LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =
        (LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)))")
                                                        (("1" (REPLACE -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("2"
                                                              (TYPEPRED "f!1")
                                                              (("2" (SKOSIMP)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (TYPEPRED "f!1")
                                                          (("2" (REPLACE -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (SKOSIMP)
                                                        (("3" (TYPEPRED "f!1")
                                                          (("3" (REPLACE -2)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (TYPEPRED "f!1")
                                                    (("3" (REPLACE -1)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP)
                                              (("2" (TYPEPRED "f!1")
                                                (("2" (REPLACE -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o")
                          (("2" (LEMMA "SigmaV_last[below[1+j!1],n!1]")
                            (("1"
                              (INST -1
                               " LAMBDA (i: Index[1 + j!1]): x!1(i) * F!1(i)"
                               "j!1" "0")
                              (("1" (ASSERT)
                                (("1" (REPLACE -1)
                                  (("1" (HIDE -1)
                                    (("1" (EXPAND "*")
                                      (("1" (EXPAND "+")
                                        (("1" (COPY -3)
                                          (("1" (EXPAND "linear_map?" -1)
                                            (("1" (FLATTEN)
                                              (("1" (EXPAND "additive?")
                                                (("1"
                                                  (INST -1
                                                   "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)"
                                                   "LAMBDA (i_1: Index[n!1]):x!1(j!1) * F!1(j!1)(i_1)")
                                                  (("1" (EXPAND "+" -1 1)
                                                    (("1"
                                                      (LEMMA
                                                       "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1"
                                                          (INST -3 "f!1`mp"
                                                           "f!1`mp"
                                                           "LAMBDA (i_1: Index[f!1`dom]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)"
                                                           "LAMBDA (i_1: Index[n!1]):
             SigmaV(0, j!1 - 1,
                    LAMBDA (i: Index[1 + j!1]):
                      LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                   (i_1)
              + x!1(j!1) * F!1(j!1)(i_1)")
                                                          (("1"
                                                            (CASE
                                                                " ((LAMBDA (i_1: Index[f!1`dom]):
          SigmaV(0, j!1 - 1,
                 LAMBDA (i: Index[1 + j!1]):
                   LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                (i_1)
           + x!1(j!1) * F!1(j!1)(i_1))
        =
        (LAMBDA (i_1: Index[n!1]):
           SigmaV(0, j!1 - 1,
                  LAMBDA (i: Index[1 + j!1]):
                    LAMBDA (i_1: Index[n!1]): x!1(i) * F!1(i)(i_1))
                 (i_1)
            + x!1(j!1) * F!1(j!1)(i_1)))")
                                                            (("1"
                                                              (REPLACE -1 -4)
                                                              (("1"
                                                                (REPLACE -1)
                                                                (("1"
                                                                  (REPLACE -4)
                                                                  (("1"
                                                                    (HIDE -1
                                                                     -4)
                                                                    (("1"
                                                                      (LEMMA
                                                                       "SigmaV_last[below[1 + j!1], n!1]")
                                                                      (("1"
                                                                        (POSTPONE)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (POSTPONE)
                                                              NIL NIL)
                                                             ("3" (POSTPONE)
                                                              NIL NIL)
                                                             ("4" (POSTPONE)
                                                              NIL NIL)
                                                             ("5" (POSTPONE)
                                                              NIL NIL))
                                                            NIL)
                                                           ("2" (POSTPONE) NIL
                                                            NIL)
                                                           ("3" (POSTPONE) NIL
                                                            NIL)
                                                           ("4" (POSTPONE) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (POSTPONE) NIL NIL)
                                                   ("3" (POSTPONE) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (POSTPONE) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "linear_map_e?")
        (("2" (FLATTEN)
          (("2" (EXPAND "linear_map_e?")
            (("2" (EXPAND "linear_map?")
              (("2" (SPLIT)
                (("1" (EXPAND "additive?")
                  (("1" (SKOSIMP)
                    (("1" (INST -1 "2")
                      (("1" (ASSERT)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "sigma")
                                (("1" (INST -1 "LAMBDA (i:below[2]):1" "_")
                                  (("1" (ASSERT)
                                    (("1"
                                      (INST -1
                                       "(LAMBDA (i: below[2]): x!1)   WITH [(1) := y!1]")
                                      (("1" (ASSERT)
                                        (("1" (GRIND)
                                          (("1"
                                            (CASE
                                                " f!1`mp(LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) =f!1`mp(x!1 + y!1)")
                                            (("1" (REPLACE -1 -2)
                                              (("1" (HIDE -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (EXPAND "+" 1 2)
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (SKOSIMP)
                                                          (("1" (REPLACE -2)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 2)
                                              (("2"
                                                (LEMMA
                                                 "congruence[Vector[n!1],Vector[f!1`codom]]")
                                                (("2"
                                                  (INST -1 "f!1`mp" "f!1`mp"
                                                   "LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)"
                                                   "x!1+y!1")
                                                  (("1"
                                                    (CASE
                                                        " (LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) = x!1 + y!1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      NIL NIL)
                                                     ("3" (TYPEPRED "f!1")
                                                      (("3" (SKOSIMP)
                                                        (("3" (REPLACE -1)
                                                          (("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOSIMP)
                                                    (("2" (TYPEPRED "f!1")
                                                      (("2" (REPLACE -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (TYPEPRED "f!1")
                                              (("3" (SKOSIMP)
                                                (("3" (REPLACE -1)
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP)
                                        (("2" (TYPEPRED "f!1")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "homogeneous?")
                  (("2" (SKOSIMP)
                    (("2" (INST -1 "1")
                      (("2"
                        (INST -1 "LAMBDA (i: below[1]): a!1"
                         "LAMBDA (i: below[1]): x!1")
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "f!1")
                                  (("1" (EXPAND "*" -3 1)
                                    (("1" (EXPAND "*" -3 1)
                                      (("1" (EXPAND "*" 1 1)
                                        (("1"
                                          (CASE
                                              "f!1`mp(LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) = f!1`mp(LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i))")
                                          (("1" (REPLACE -1 -4)
                                            (("1" (REPLACE -4 1)
                                              (("1" (HIDE -1)
                                                (("1" (HIDE -3)
                                                  (("1" (EXPAND "*")
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (HIDE 2)
                                                        (("1" (EXPAND "*")
                                                          (("1" (EXPAND "o")
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (REPLACE -2)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -3 2)
                                            (("2"
                                              (LEMMA
                                               "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                              (("2"
                                                (INST -1 "f!1`mp" "f!1`mp"
                                                 "LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)"
                                                 "LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)")
                                                (("1"
                                                  (CASE
                                                      " ((LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) =
        (LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE -1 2)
                                                    (("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("2" (SKOSIMP)
                                                        (("2" (REPLACE -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (SKOSIMP)
                                                    (("3" (REPLACE -2)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (REPLACE -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (SKOSIMP)
                                            (("3" (REPLACE -1)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (SKOSIMP)
                            (("2" (TYPEPRED "f!1")
                              (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|casi| "casi" 3546877678
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1" (INST -4 "x!1(0)" "F!1(0)")
                                            (("1" (EXPAND "*" -4 1)
                                              (("1"
                                                (CASE
                                                    "f!1`mp(LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -5)
                                                    (("1" (HIDE -1)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (HIDE -6)
                                                          (("1"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (EXPAND "*")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (SKOSIMP)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (SKOSIMP)
                                                              (("3" (SKOSIMP)
                                                                (("3"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (REPLACE -1)
                                                                  (("4"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -4 2)
                                                  (("2"
                                                    (LEMMA
                                                     "congruence[Vector[f!1`dom],Vector[n!1]]")
                                                    (("2"
                                                      (INST -1 "f!1`mp"
                                                       "f!1`mp"
                                                       "LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)"
                                                       "LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)")
                                                      (("1"
                                                        (CASE
                                                            " ((LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =
        (LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)))")
                                                        (("1" (REPLACE -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("2"
                                                              (TYPEPRED "f!1")
                                                              (("2" (SKOSIMP)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (TYPEPRED "f!1")
                                                          (("2" (REPLACE -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (SKOSIMP)
                                                        (("3" (TYPEPRED "f!1")
                                                          (("3" (REPLACE -2)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (TYPEPRED "f!1")
                                                    (("3" (REPLACE -1)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP)
                                              (("2" (TYPEPRED "f!1")
                                                (("2" (REPLACE -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o") (("2" (POSTPONE) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (EXPAND "linear_map_e?")
        (("2" (FLATTEN)
          (("2" (EXPAND "linear_map_e?")
            (("2" (EXPAND "linear_map?")
              (("2" (SPLIT)
                (("1" (EXPAND "additive?")
                  (("1" (SKOSIMP)
                    (("1" (INST -1 "2")
                      (("1" (ASSERT)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "sigma")
                                (("1" (INST -1 "LAMBDA (i:below[2]):1" "_")
                                  (("1" (ASSERT)
                                    (("1"
                                      (INST -1
                                       "(LAMBDA (i: below[2]): x!1)   WITH [(1) := y!1]")
                                      (("1" (ASSERT)
                                        (("1" (GRIND)
                                          (("1"
                                            (CASE
                                                " f!1`mp(LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) =f!1`mp(x!1 + y!1)")
                                            (("1" (REPLACE -1 -2)
                                              (("1" (HIDE -1)
                                                (("1" (REPLACE -1)
                                                  (("1" (EXPAND "+" 1 2)
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (SKOSIMP)
                                                          (("1" (REPLACE -2)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (HIDE -1 2)
                                              (("2"
                                                (LEMMA
                                                 "congruence[Vector[n!1],Vector[f!1`codom]]")
                                                (("2"
                                                  (INST -1 "f!1`mp" "f!1`mp"
                                                   "LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)"
                                                   "x!1+y!1")
                                                  (("1"
                                                    (CASE
                                                        " (LAMBDA (i_1: below[n!1]): x!1(i_1) + y!1(i_1)) = x!1 + y!1")
                                                    (("1" (ASSERT) NIL NIL)
                                                     ("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      NIL NIL)
                                                     ("3" (TYPEPRED "f!1")
                                                      (("3" (SKOSIMP)
                                                        (("3" (REPLACE -1)
                                                          (("3" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (SKOSIMP)
                                                    (("2" (TYPEPRED "f!1")
                                                      (("2" (REPLACE -1)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("3" (TYPEPRED "f!1")
                                              (("3" (SKOSIMP)
                                                (("3" (REPLACE -1)
                                                  (("3" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP)
                                        (("2" (TYPEPRED "f!1")
                                          (("2" (REPLACE -1)
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (EXPAND "homogeneous?")
                  (("2" (SKOSIMP)
                    (("2" (INST -1 "1")
                      (("2"
                        (INST -1 "LAMBDA (i: below[1]): a!1"
                         "LAMBDA (i: below[1]): x!1")
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "f!1")
                                  (("1" (EXPAND "*" -3 1)
                                    (("1" (EXPAND "*" -3 1)
                                      (("1" (EXPAND "*" 1 1)
                                        (("1"
                                          (CASE
                                              "f!1`mp(LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) = f!1`mp(LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i))")
                                          (("1" (REPLACE -1 -4)
                                            (("1" (REPLACE -4 1)
                                              (("1" (HIDE -1)
                                                (("1" (HIDE -3)
                                                  (("1" (EXPAND "*")
                                                    (("1"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("1" (HIDE 2)
                                                        (("1" (EXPAND "*")
                                                          (("1" (EXPAND "o")
                                                            (("1" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (REPLACE -2)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (HIDE -3 2)
                                            (("2"
                                              (LEMMA
                                               "congruence[Vector[f!1`dom],Vector[f!1`codom]]")
                                              (("2"
                                                (INST -1 "f!1`mp" "f!1`mp"
                                                 "LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)"
                                                 "LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)")
                                                (("1"
                                                  (CASE
                                                      " ((LAMBDA (i_1: below[n!1]): a!1 * x!1(i_1)) =
        (LAMBDA (i: Index[f!1`dom]): a!1 * x!1(i)))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (HIDE -1 2)
                                                    (("2"
                                                      (APPLY-EXTENSIONALITY)
                                                      (("2" (SKOSIMP)
                                                        (("2" (REPLACE -1)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("3" (SKOSIMP)
                                                    (("3" (REPLACE -2)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (SKOSIMP)
                                                  (("2" (REPLACE -1)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (SKOSIMP)
                                            (("3" (REPLACE -1)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP)
                          (("2" (SKOSIMP)
                            (("2" (TYPEPRED "f!1")
                              (("2" (REPLACE -1) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|encamino| "encamino" 3546876789
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1" (INST -4 "x!1(0)" "F!1(0)")
                                            (("1" (EXPAND "*" -4 1)
                                              (("1"
                                                (CASE
                                                    "f!1`mp(LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                                (("1" (REPLACE -1)
                                                  (("1" (REPLACE -5)
                                                    (("1" (HIDE -1)
                                                      (("1" (TYPEPRED "f!1")
                                                        (("1" (HIDE -6)
                                                          (("1"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("1" (HIDE 2)
                                                              (("1"
                                                                (EXPAND "*")
                                                                (("1"
                                                                  (EXPAND "*")
                                                                  (("1"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (SKOSIMP)
                                                              (("2"
                                                                (REPLACE -2)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL)
                                                             ("3" (SKOSIMP)
                                                              (("3" (SKOSIMP)
                                                                (("3"
                                                                  (TYPEPRED
                                                                   "y!1")
                                                                  (("3"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("4" (SKOSIMP)
                                                              (("4" (SKOSIMP)
                                                                (("4"
                                                                  (REPLACE -1)
                                                                  (("4"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -4 2)
                                                  (("2"
                                                    (LEMMA
                                                     "congruence[Vector[f!1`dom],Vector[n!1]]")
                                                    (("2"
                                                      (INST -1 "f!1`mp"
                                                       "f!1`mp"
                                                       "LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)"
                                                       "LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)")
                                                      (("1"
                                                        (CASE
                                                            " ((LAMBDA (i: Index[f!1`dom]): x!1(0) * F!1(0)(i)) =
        (LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i)))")
                                                        (("1" (REPLACE -1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL)
                                                         ("2" (HIDE -1 2)
                                                          (("2"
                                                            (APPLY-EXTENSIONALITY)
                                                            (("2"
                                                              (TYPEPRED "f!1")
                                                              (("2" (SKOSIMP)
                                                                (("2"
                                                                  (REPLACE -1)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2" (SKOSIMP)
                                                        (("2" (TYPEPRED "f!1")
                                                          (("2" (REPLACE -1)
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("3" (SKOSIMP)
                                                        (("3" (TYPEPRED "f!1")
                                                          (("3" (REPLACE -2)
                                                            (("3" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (TYPEPRED "f!1")
                                                    (("3" (REPLACE -1)
                                                      (("3" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP)
                                              (("2" (TYPEPRED "f!1")
                                                (("2" (REPLACE -1)
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o") (("2" (POSTPONE) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (POSTPONE) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|linear_map_characterization-1| NIL 3546585937
   ("" (SKOSIMP)
    (("" (SPLIT)
      (("1" (FLATTEN)
        (("1" (EXPAND "linear_map_e?")
          (("1" (INDUCT "l")
            (("1" (CASE "l!1=0")
              (("1" (EXPAND "linear_map_e?")
                (("1" (SKOSIMP)
                  (("1" (REPLACE -1 2) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL)
             ("2" (ASSERT) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (CASE "j!1=0")
                (("1" (EXPAND "linear_map_e?")
                  (("1" (SKOSIMP)
                    (("1" (REPLACE -1)
                      (("1" (HIDE -2)
                        (("1" (EXPAND "SigmaV")
                          (("1" (EXPAND "sigma")
                            (("1" (EXPAND "sigma")
                              (("1" (EXPAND "o")
                                (("1" (EXPAND "linear_map?")
                                  (("1" (FLATTEN)
                                    (("1" (EXPAND "homogeneous?")
                                      (("1" (EXPAND "*" 1 1)
                                        (("1" (EXPAND "*" 1 1)
                                          (("1"
                                            (INST -4 "n!1" "x!1(0)" "F!1(0)")
                                            (("1"
                                              (CASE
                                                  "f!1`mp(x!1(0) * F!1(0))= f!1`mp(LAMBDA (i: below[n!1]): x!1(0) * F!1(0)(i))")
                                              (("1" (REPLACE -1 -5)
                                                (("1" (HIDE -1)
                                                  (("1" (GRIND)
                                                    (("1" (HIDE -2 -3 -4)
                                                      (("1" (EXPAND "*")
                                                        (("1" (GRIND)
                                                          (("1"
                                                            (TYPEPRED "f!1")
                                                            (("1" (GRIND)
                                                              (("1"
                                                                (APPLY-EXTENSIONALITY)
                                                                (("1" (HIDE 2)
                                                                  (("1"
                                                                    (SKOSIMP)
                                                                    (("1"
                                                                      (GRIND)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (HIDE 2)
                                                                  (("2"
                                                                    (SKOSIMP)
                                                                    (("2"
                                                                      (SKOSIMP)
                                                                      (("2"
                                                                        (HIDE
                                                                         -4)
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (GRIND)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("3"
                                                                  (HIDE -4 2)
                                                                  (("3"
                                                                    (SKOSIMP)
                                                                    (("3"
                                                                      (SKOSIMP)
                                                                      (("3"
                                                                        (GRIND)
                                                                        NIL
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (HIDE 2)
                                                (("2" (HIDE -4)
                                                  (("2" (APPLY-EXTENSIONALITY)
                                                    (("1" (HIDE 2)
                                                      (("1" (GRIND)
                                                        (("1" (EXPAND "*" 1)
                                                          (("1" (PROPAX) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2" (HIDE 2)
                                                      (("2" (SKOSIMP)
                                                        (("2" (HIDE -3)
                                                          (("2" (GRIND) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("3" (HIDE -4 2)
                                                (("3" (SKOSIMP)
                                                  (("3" (HIDE -3)
                                                    (("3" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (ASSERT)
                  (("2" (EXPAND "linear_map_e?")
                    (("2" (SKOSIMP)
                      (("2" (EXPAND "*")
                        (("2" (EXPAND "o") (("2" (POSTPONE) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2" (POSTPONE) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

